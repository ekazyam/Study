■ファイルアップロードに関する脆弱性
利用者がファイルをアップロード/ダウンロードする機能を備えるサーバについて、
脆弱性が発生する場合がある。

■Dos攻撃に対する脆弱性
巨大なファイルをアップロードすることで、Webサーバに対し負荷をかけることができる。
これを防止する方法として、1ファイルあたりの容量を制限することが有効である。
★PHPの場合
PHPの場合、php.iniの設定により、アップロードの容量制限を行うことができる。

★Apacheの場合
httpd.confの設定により、リクエストボディの容量制限を行うことができる。
LimiteRequestBody 102400

■アップロードファイルによるスクリプト実行の脆弱性
利用者がアップロードしたスクリプトを公開ディレクトリに設置する機能を備える
Webアプリケーションを考える。(画像アップローダ等)
アップロードしたファイルの拡張子がphp,jsp等であった場合、Webアプリケーションとして
実行できてしまう可能性がある。
これにより以下のような不具合が生じる。
1.Webサーバ内のデータの不正アクセス/改ざん
2.外部へのメール中継
3.別のサーバへの攻撃の踏み台

このため、アップロードしたファイルに対しては拡張子をチェックすると共に、
公開ディレクトリに配置せずに、スクリプト経由でアクセスさせる方法が望ましい。
以下の様な例を考える。
/var/uploadに対しアップロードされたファイルを設置する。
公開ディレクトリは/var/wwwであり、内部のスクリプトからしか/var/uploadはアクセスできない仕様である。
また、アップロードされる拡張子をチェックし、内部のスクリプトでチェックすることが重要である。

■スクリプトのアップロードによるデータの盗難
以下の様なPHPをアップロードすることで、Webサーバで実行される不具合が生じる。
★hoge.php
<pre>
<?php
	system('/bin/cat /etc/passwd');
?>
</pre>
これらの権限はWebアプリケーションのユーザの持つ権限で動作するため、
過大な権限を付与していた場合に被害が拡大する。