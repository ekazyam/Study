■重要な処理の際に混入する脆弱性
Webアプリケーションには、重要な処理がある。
例えば、利用者の意図したリクエスト(操作)を確認する機能が必要である。
この機能に欠陥がある場合、脆弱性が発生する。
これをクロスサイトリクエストフォージェリ(CSRF)と呼ぶ。
重要な処理とは以下のような例を考える
1.利用者のアカウントによる購入
2.利用者のアカウントによる退会
3.利用者のアカウントによる書き込み
4.利用者のアカウントによるパスワード,メールアドレス等の個人情報変更
いずれも利用者の権限により実行される。
また、CSRFでは個人情報の取得はできない。

■CSRFによる攻撃手法と影響
以下の条件を満たすパスワード変更画面を考える。
1.利用者はログインしている。
2.パスワード変更画面はpwdパラメータをPOSTメソッドにより受け付ける。
この場合、以下の様な攻撃例が考えられる。
1.攻撃者がパスワード変更画面に対するpwdパラメータをPOSTする画面を用意する。
2.利用者がログインした状態で1.の画面にアクセスする。
結果として、攻撃者の意図した任意のpwdパラメータが正規サイトの
パスワード変更画面にPOSTされ、利用者のパスワードが第三者によって変更される事象が発生する。

■CSRFによる情報漏洩
CSRF実行後、パスワードが任意の値に変更された例を考える。
CSRFにより攻撃者は利用者のパスワードを知っている状態となるため、
不正なログインを許可してしまう。
そこから利用者の個人情報が盗まれてしまう事象が発生する。

■CSRFの影響
CSRFはWebアプリケーションで利用できる機能を利用し実行される。
そのため、CSRFはWebアプリケーションの設計段階で開発者が認知し、防止することが重要である。