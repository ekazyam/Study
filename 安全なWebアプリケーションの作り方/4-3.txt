■表示処理を起因とした問題
クロスサイトスクリプティングとエラーメッセージの漏洩の2種類が存在する。

■クロスサイトスクリプティングについて(XSS)
1.サイト利用者のブラウザ上で攻撃用スクリプトが動作し、
　　クッキーに保存されたセッションIDが盗まれ、なりすましの被害に遭う。
2.サイト利用者のブラウザ上で攻撃用スクリプトが動作し、
　　正規サイトの利用を利用者の権限で行われてしまう。
3.偽の入力フォームから情報が漏洩する。(フィッシング)
上記いづれかの脆弱性が存在した場合でも、XSSの発生元となりうる。

■XSSの例
javascriptを流し込むことでXSSを発生させ、cookieに保存されている
セッションIDを盗み出す。(セッションハイジャックと呼ぶ)
★例
http://example.jp/43/43-001.php?keyword=test
http://example.jp/43/43-001.php?keyword=<script>alert(document.cookie)</script>

実際は受動的攻撃(罠サイトに利用者を誘導)を行い、利用者のセッションIDを盗み出す
ことを目的として実行されることが多い。

★攻撃実例1
1.iframe内に脆弱なページが埋め込まれた罠サイトを表示する。
  ☆iframeは同一生成元ポリシーにより、別ドメインでも表示可能である。
  ☆iframe外からiframe内(別ドメイン)へのjavascript実行は禁止されているので
    iframe内のページそのものに害のあるjavascriptを埋め込む。
2.iframe内でcookie値を盗み出すjavascriptが動作する。
3.さらに、表示されたcookie値をクエリ情報としてiframe内で別ページに送信し、
　遷移したページからメール等で攻撃者に盗み出されたセッションIDが送信される。
　☆cookieは利用者が書き換え可能である点を利用し、盗みだしたセッションIDを
　　 書き換え、攻撃被害者のIDになりすます。

★攻撃実例2
formの書き換えにより、意図しないページを表示させ、クレジットカードなどの個人情報を
攻撃者のページへ送信させる。
1.罠ページへアクセスさせる。
2.罠ページから正規サイトへのリンクを作成する。
  ☆このリンクには、正規サイトのformを書き換える構文が記載されている。 
  ☆form内容を改変することで、盗みたい情報や情報の送信先を変更することができる。